unzip: 									tar -zxvf <file_name>.tar.gz 
										tar -xf <file_name>.tar
										tar -xvf <file_name>.tar.xz
										tar -xf archive.tar.bz2tar

AMD GPU install Pre-20.45: 				sudo ./amdgpu-pro-install -y --opencl=legacy,pal
AMD GPU install Vega/Navi1x+ 20.45+: 	sudo ./amdgpu-pro-install -y --opencl=rocr,legacy
AMD GPU uninstall:						sudo amdgpu-pro-uninstall -y
ubuntu dpkg error correction			sudo dpkg --configure -a
LINUX blacklist:						sudo nano /etc/modprobe.d/blacklist.conf
ubuntu:									blacklist amdgpu

RHEL/CentOS:							blacklist qxl
										blacklist amdgpu
										blacklist amdkfd
										
ubuntu security updates:				sudo apt-get update 
										sudo apt-get upgrade -s | grep -i security
										
check amdgpu package(ubuntu):			dpkg -l | grep amdgpu-pro 
check amdgpu package(RHEL/CentOS):		rpm -qa | grep amdgpu-pro	

x11vnc add AMDGPU device				sudo nano /usr/share/X11/xorg.conf.d/00-amdgpu.conf
			
Section "Device"
           Identifier "amdgpu"
           Driver "amdgpu"
           BusID "PCI:2177792:0:0"
EndSection

Linux check host driver version: 		modinfo gim | grep version

Clinfo on LINUX:						cd /opt/amdgpu-pro/bin/clinfo	or	cd /opt/amdgpu-pro/bin/
										./clinfo | grep 'Board name\|Max compute units\|Name\|Device OpenCL C version\|Version'

										

uninstall DCV							sudo apt-get purge --auto-remove nice-dcv-server
Install clinfo:							sudo apt install clinfo -y
Install dependancy of glx				sudo apt install mesa-utils
Amazon Linux install utilies			sudo yum install -y amazon-efs-utils
Amazon Linux intall gnome terminal:		sudo yum install gnome-terminal -y
AutoDesk Dependancy on CentOS/RHEL: 	sudo yum install openal-soft libXScrnSaver -y
ubuntu multi-media package:				sudo apt-get install ubuntu-restricted-extras
ubuntu install build essential:			sudo apt-get install build-essential

open virt-manager						sudo virt-manager
									
linux check kernel						sudo dpkg -l | grep 'linux-header\|linux-image'

Amazon Linux Nebula File Install Dependancy
										rpmkeys --import "http://pool.sks-keyservers.net/pks/lookup?op=get&search=0x3fa7e0328081bff6a14da29aa6a19b38d3d831ef" 
										su -c 'curl https://download.mono-project.com/repo/centos7-stable.repo | tee /etc/yum.repos.d/mono-centos7-stable.repo'
										sudo yum install mono-complete


kill all the process run by test		killall -u test
change username/usermod					sudo usermod -md /home/pvteam64 -l pvteam64 test
change group names						sudo groupmod -n pvteam64 test
change password							passwd test
file transfer:							scp <file_to_copy> pvteam64@<IP_Address>:<Destination_Loction>		 
 
VNC change resolution:					xrandr -s 1920x1080

Check OS release:						cat /etc/os-release 
check centOS release					cat /etc/redhat-release

vbios check: 							sudo ./amdvbflash -i
flash vbios: 							sudo ./amdvbflash -p -f <gpu_number> <vbios_verison>

linux ssh session:						ssh <username>@<ip_address>
nebulia linux output:					sudo ./startexe -out
show GPU/Display:						lspci | grep Display
show CPU model:							lscpu | grep -i name
load gpu driver: 						sudo modprobe gim
check BIOS version: 					sudo dmidecode --type bios
resize harddrive on vm:					sudo qemu-img resize vmFilename.qcow2 +20G


check empty disk space:					df -hT /home
remove files: 							rm -rf <file_name>
remove dirctory:						rmdir <folder_name>
move file to another place:				mv /home/jack/testfile /home/jack/testfile2
copy file:								cp <source_file> <desination_dir> 


AWS gim change VF gloable config :
1.	“modprobe -r gim" to first unload host driver
2.	"modprobe gim vf_num=#" where # is #vf you want to test.  This will allow the host driver to load in #vf.


<!-- VM Management -->
list all VMs:							virsh list --all
check running VMS:						virsh list
Start VM:								virsh start <VM_ID_OR_NAME>
shutdown VM:							virsh shutdown <VM_ID_OR_NAME>
reboot VM:								virsh reboot <VM_ID_OR_NAME>
destory VM:								virsh dest <VM_ID_OR_NAME>
get VM MAC address: 					1.	virsh list
										2.	virsh dumpxml <VM_NAME> | grep "mac address" | awk -F\' '{ print $2}'
										
										virsh list --name | while read n ; do  [[ ! -z $n ]] && virsh domifaddr $n; done
get VM IP address:						1. virsh list
										2. virsh domifaddr <ID_from_pervious_step>																	
<!-- VM Management -->
 
AWS test/DCV set up:
sudo modprobe amdgpu
dpkg -l | grep amdgpu-pro 
cd /home/sriov
./reconnectDCV.sh
  
AWS_DCV Reconnect  
use the following command for reconnect: 
systemctl stop lightdm
modprobe amdgpu virtual_display=all
systemctl start lightdm
systemctl restart dcvserver


Azure Resize the VM disksize  (do in moba) all the following steps need to run as ROOT
1.		extend disk in Hyper-v/Virt Manager 
2.		command:	fdisk /dev/sda
3.		enter m 							"print menue"
4.		enter n								"choose add new partition"
5. 		enter p								"select primary"
6.		enter 3								"choose default"
7		press enter to choose default first sector
8.		press enter to choose default end sector	
9. 		enter t								"change the partition system ID"
11.		enter 3								"choose default partition"
12. 	enter 8e							"change partition type to Linux LVM"
13. 	enter w								"make all the changed happen"
14. 	reboot vm
15.		command:	pvcreate /dev/sda3
16.		command:	vgextend rhel /dev/sda3
17. 	command:	lvextend -L+<Disk_Size_NEED_TO_ADD> /dev/rhel/root
18.1 	command:	xfs_growfs /dev/rhel/root   
18.2	command:	resize2fs /dev/rhel/root  (if the pervious xfs command doesn't work)


AWS Resize the VM disksize  (do in moba) all the following steps need to run as ROOT
1.		extend disk with qemu-img resize <vmFilename.qcow2> +<number of size(size in GB)>
2.		command:	fdisk /dev/vda
3.		enter m 							"print menue"
4.		enter n								"choose add new partition"
5. 		enter p								"select primary"
6.		enter 3								"choose default"
7		press enter to choose default first sector
8.		press enter to choose default end sector	
9. 		enter t								"change the partition system ID"
11.		enter 3								"choose default partition"
12. 	enter 8e							"change partition type to Linux LVM"
13. 	enter w								"make all the changed happen"
14. 	reboot vm
15.		command:	pvcreate /dev/vda3
16.		command:	vgextend centos /dev/vda3
17. 	command:	lvextend -L+<Disk_Size_NEED_TO_ADD(size in MB)> /dev/centos/root
18.1 	command:	xfs_growfs /dev/centos/root   
18.2	command:	resize2fs /dev/centos/root  (if the pervious xfs command doesn't work)